apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring-backend
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: docker.repository.bog.ge/grafana/grafana:6.5.1
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage        
        - mountPath: /etc/grafana/provisioning/dashboards/all.yml
          name: dashboard-source
          readOnly: true
          subPath: all.yml
        - mountPath: /etc/grafana/provisioning/datasources/all.yml
          name: datasource
          readOnly: true
          subPath: all.yml
        - mountPath: /var/lib/grafana/dashboards/kubernetes-dashboard-pods-template.json
          name: kubernetes-dashboard-pods
          readOnly: true
          subPath: kubernetes-dashboard-pods-template.json
        - mountPath: /var/lib/grafana/dashboards/kubernetes-dashboard-template.json
          name: kubernetes-dashboard
          readOnly: true
          subPath: kubernetes-dashboard-template.json
      dnsPolicy: ClusterFirst
      nodeSelector:
              type: worker-2
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-data
      - configMap:
          defaultMode: 420
          name: dashboard-source
        name: dashboard-source
      - configMap:
          defaultMode: 420
          name: datasource
        name: datasource
      - configMap:
          defaultMode: 420
          name: kubernetes-dashboard-pods
        name: kubernetes-dashboard-pods
      - configMap:
          defaultMode: 420
          name: kubernetes-dashboard
        name: kubernetes-dashboard
