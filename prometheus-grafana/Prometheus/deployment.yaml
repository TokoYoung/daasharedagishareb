apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  labels:
    prometheus: k8s
  name: prometheus
  namespace: monitoring-backend
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: prometheus
      prometheus: k8s
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: prometheus
        prometheus: k8s
    spec:
      containers:
      - args:
        - --config.file=/etc/prometheus/config/prometheus.yaml
        - --storage.tsdb.path=/var/prometheus/data
        - --storage.tsdb.retention=672h
        - --web.enable-lifecycle
        - --web.route-prefix=/
        image: docker.repository.bog.ge/prometheus/prometheus:v2.7.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /-/healthy
            port: web
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: prometheus
        ports:
        - containerPort: 9090
          name: web
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /-/ready
            port: web
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          requests:
            memory: 400Mi
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
          privileged: false
          procMount: Default
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
          readOnly: true
        - mountPath: /var/prometheus/data
          name: prometheus-k8s-db
      - args:
        - -reload-url=http://localhost:9090/-/reload
        - -config-volume-dir=/etc/prometheus/config
        - -rule-volume-dir=/etc/prometheus/rules
        image: docker.repository.bog.ge/coreos/prometheus-config-reloader:v0.0.2
        imagePullPolicy: IfNotPresent
        name: prometheus-config-reloader
        resources:
          limits:
            cpu: "1"
            memory: 3Gi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/prometheus/config
          name: config
          readOnly: true
      dnsPolicy: ClusterFirst
      #nodeSelector:
      #  type: storage-2
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccount: prometheus
      serviceAccountName: prometheus
      #tolerations:
      #- effect: NoSchedule
      #  operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus
        name: config
      - name: prometheus-k8s-db
        persistentVolumeClaim:
          claimName: prometheus-data
